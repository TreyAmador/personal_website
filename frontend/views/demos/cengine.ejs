<!doctype html>
<html lang="en">
  <head>
    <% include ../partials/head.ejs %>
    <title>C++ Game Engine | Trey Amador</title>
  </head>
  <body ng-app="personal">
    <header><% include ../partials/header.ejs %></header>
    <div class="demo-wrapper" ng-controller="demoCtrl">
      <div class="demo-media-wrapper">
        <div class="demo-media">
          <video class="demo-video" loop>
            <source src="../media/cengine.mp4" type="video/mp4">
            Your browser does not support HTML5 video
          </video>
          <div class="playpause"></div>
        </div>
        <div class="demo-description">
          <div class="demo-header">
            C++ Game Engine, implemented with SDL graphics library
          </div>
          <div class="demo-textbody">
            <p>
              This engine was implemented in C++ using the Simple DirectMedia Library for the 
              purpose of rendering graphics. It includes a physics engine, a particle engine, 
              an automatic map-loader which parses xml files, graphics managers, etc...
              The design paradigm centered around all in-game objects inhereting from 
              abstract geometic objects which roughly represented their physical properties, 
              (i.e., circular sprites inheret from circle class). 
            </p>
            <p>
              All physics calculations 
              were greatly simplified since each update referred to the superclass, 
              and not the object itself. In turn, each physics shape inhereted from a 
              'body' class. This had the advantage of allowing all objects to be updated 
              and rendered by simply passing the body superclass into functions which 
              completed these tasks, rather than updating each sprite individually.  
              One could pass any 'body' object into the camera object, for example, 
              which would calculate the offset and render it to screen. 
            </p>
          </div>
        </div>
      </div>
      <div class="demo-footer">
        <div class="demo-footer-inner">
          <span class="left-demo"></span>
          <span class="right-demo"></span>
        </div>
      </div>
    </div>
  </body>
</html>
